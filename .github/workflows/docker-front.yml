name: Publish Front

on:
  workflow_run:
    workflows: [Linting Front]
    types: [completed]
    branches: ["master"]
    
  push:
    branches: ["master"]
    paths:
        - "front/**"
  
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push_front:
    name: Push Docker image Front
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.2

      - name: Caching dependencies
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: ./front/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}-node-modules

      - name: Caching build
        uses: actions/cache@v3
        with:
          path: ./front/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}

      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        working-directory: ./front
        run: bun install --frozen-lockfile

      - name: Build next app
        working-directory: ./front
        run: bun run build
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: docker/prod/node/Dockerfile
          
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: spacelocust/sp-front:latest

          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
