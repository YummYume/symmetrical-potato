# User
user.verify.confirm: >
  Êtes-vous sûr de vouloir vérifier cet utilisateur ? Il recevra un e-mail l'informant qu'il peut maintenant se connecter.
user.delete.confirm: >
  Êtes-vous sûr de vouloir supprimer cet utilisateur ? Toutes les données associées à cet utilisateur seront supprimées.
user.revive.confirm: >
  Êtes-vous sûr de vouloir réanimer cet utilisateur ? Il sera considéré comme vivant et pourra se connecter.
user.kill.confirm: >
  Êtes-vous sûr de vouloir tuer cet utilisateur ? Des tueurs à gages seront envoyés à son emplacement. Il sera considéré comme mort et ne pourra plus se connecter.
user.roles.roles: Rôles
user.roles.role_user: Utilisateur
user.roles.role_heister: Braqueur
user.roles.role_employee: Employé
user.roles.role_contractor: Contractant
user.roles.role_admin: Admin

# Asset
asset.delete.confirm: >-
  Êtes-vous sûr de vouloir supprimer cet asset ? Toutes les données associées à cet asset seront supprimées.
  Tous les braqueurs qui ont acheté cet asset seront remboursés. Si cet asset appartient à un braquage, son contractant sera celui qui remboursera les braqueurs.

# Contractor Request
contractor_request.request_of: Demande de {name}
contractor_request.reject: Rejeter
contractor_request.rejecting: Rejet...
contractor_request.accept: Accepter
contractor_request.accepting: Acceptation...
contractor_request.delete.confirm: >-
  Êtes-vous sûr de vouloir supprimer cette demande de contractant ? Pour suivre les demandes, il est recommandé de les conserver en les rejetant simplement.
contractor_request.accept.confirm: >-
  Êtes-vous sûr de vouloir accepter cette demande de contractant ? L'utilisateur deviendra un contractant et pourra créer des établissements.
contractor_request.reject.confirm: >-
  Êtes-vous sûr de vouloir rejeter cette demande de contractant ? L'utilisateur sera informé du rejet et pourra lire la raison pour laquelle il a été rejeté.

# Dashboard
## Heists
dashboard.heists: >-
  {heists, plural,
    =0 {Aucun braquage}
    =1 {Un braquage}
    other {# braquages}
  }
dashboard.heists.last_90_days: Statistiques des braquages des 90 derniers jours
dashboard.heists.failed: Braquages échoués
dashboard.heists.successful: Braquages réussis
dashboard.heists.cancelled: Braquages annulés
dashboard.heists.total: >-
  {total, plural,
    =0 {Aucun braquage}
    =1 {Un braquage}
    other {# braquages}
  }
dashboard.heists.summary: >-
  {successful, plural,
    =0 {aucun braquage réussi}
    one {un braquage réussi}
    other {# braquages réussis}
  }, {failed, plural,
    =0 {Aucun braquage échoué}
    one {Un braquage échoué}
    other {# braquages échoués}
  } et {cancelled, plural,
    =0 {aucun braquage annulé}
    one {un braquage annulé}
    other {# braquages annulés}
  } pour un total de {total, plural,
    =0 {0 braquage}
    one {1 braquage}
    other {# braquages}
  }.

## Crew members
dashboard.crew_members: >-
  {crew_members, plural,
    =0 {Aucun braqueur}
    =1 {Un braqueur}
    other {# braqueurs}
  }
dashboard.crew_members.last_90_days: Statistiques des braqueurs des 90 derniers jours
dashboard.crew_members.free: Braqueurs libres
dashboard.crew_members.jailed: Braqueurs en prison
dashboard.crew_members.dead: Braqueurs morts
dashboard.crew_members.total: >-
  {total, plural,
    =0 {Aucun braqueur}
    =1 {Un braqueur}
    other {# braqueurs}
  }
dashboard.crew_members.summary: >-
  {free, plural,
    =0 {aucun braqueur libre}
    one {un braqueur libre}
    other {# braqueurs libres}
  }, {jailed, plural,
    =0 {Aucun braqueur en prison}
    one {Un braqueur en prison}
    other {# braqueurs en prison}
  } et {dead, plural,
    =0 {aucun braqueur mort}
    one {un braqueur mort}
    other {# braqueurs morts}
  } pour un total de {total, plural,
    =0 {0 braqueur}
    one {1 braqueur}
    other {# braqueurs}
  }.
